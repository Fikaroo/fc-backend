// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum Status {
  PENDING
  SHIPPED
  DELIVERED
  CANCELLED
}

model Customer {
  id        String  @id @default(auto()) @map("_id") @db.ObjectId
  firstName String
  lastName  String
  email     String  @unique
  phone     String?
  address   String?

  reviews Review[]
  orders  Order[]
}

model Category {
  id          String  @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  description String?

  subcategories Subcategory[]
  products      Product[]
}

model Subcategory {
  id          String  @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  description String?

  category   Category? @relation(fields: [categoryId], references: [id])
  categoryId String?   @db.ObjectId

  products Product[]
}

model Brand {
  id          String  @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  description String?
  image       String?

  products Product[]
}

model Product {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  name              String
  description       String?
  price             Float
  availableQuantity Int     @default(0)

  category   Category @relation(fields: [categoryId], references: [id])
  categoryId String   @db.ObjectId

  subcategory   Subcategory? @relation(fields: [subcategoryId], references: [id])
  subcategoryId String?      @db.ObjectId

  brand   Brand  @relation(fields: [brandId], references: [id])
  brandId String @db.ObjectId

  avgRating Float @default(0)

  images ProductImage[]

  reviews Review[]

  orderItems OrderItem[]
}

model ProductImage {
  id        String  @id @default(auto()) @map("_id") @db.ObjectId
  productId String  @db.ObjectId
  imageUrl  String
  product   Product @relation(fields: [productId], references: [id])
}

model Review {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  rating     Int
  comment    String?
  reviewDate DateTime

  product   Product @relation(fields: [productId], references: [id])
  productId String  @db.ObjectId

  customer   Customer @relation(fields: [customerId], references: [id])
  customerId String   @db.ObjectId
}

model Order {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  orderDate   DateTime
  totalAmount Float
  orderStatus Status

  customer   Customer @relation(fields: [customerId], references: [id])
  customerId String   @db.ObjectId

  orderItems         OrderItem[]
  PaymentTransaction PaymentTransaction[]
}

model OrderItem {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  quantity Int
  subtotal Float

  order   Order  @relation(fields: [orderId], references: [id])
  orderId String @db.ObjectId

  product   Product @relation(fields: [productId], references: [id])
  productId String  @db.ObjectId
}

model PaymentTransaction {
  id              String   @id @default(auto()) @map("_id") @db.ObjectId
  transactionDate DateTime
  amount          Float
  paymentMethod   String

  order   Order  @relation(fields: [orderId], references: [id])
  orderId String @db.ObjectId
}
